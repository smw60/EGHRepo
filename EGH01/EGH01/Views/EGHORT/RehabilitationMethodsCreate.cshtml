@using EGH01.Core;
@using EGH01.Models.EGH;
@using EGH01DB.Primitives;
@using EGH01DB.Objects;
@using EGH01DB.Types;
@model EGH01DB.ORTContext
@{
    EGH01DB.RGEContext db = new EGH01DB.RGEContext();
    Layout = "~/Views/Shared/EGHLayout.cshtml";
    Menu head = new Menu(
                          new Menu.MenuItem("Создать", "RehabilitationMethods.Create", false),
                          new Menu.MenuItem("Excel-формат", "RehabilitationMethods.Excel", false)
                        );

    Menu create = new Menu(
                          new Menu.MenuItem("Создать", "RehabilitationMethods.Create.Create", true),
                          new Menu.MenuItem("Отказаться", "RehabilitationMethods.Create.Cancel", true)
                        );

    List<EGH01DB.Types.RiskObjectType> list_type = new List<EGH01DB.Types.RiskObjectType>();
    ViewBag.list_type = new List<SelectListItem>();
    if (db != null)
    {
        Helper.GetListRiskObjectType(db, ref list_type);
        list_type.ForEach(o => ViewBag.list_type.Add(new SelectListItem { Text = o.name, Value = o.type_code.ToString() }));

    }

    List<EGH01DB.Types.CadastreType> list_cadastre = new List<EGH01DB.Types.CadastreType>();
    ViewBag.list_cadastre = new List<SelectListItem>();
    if (db != null)
    {
        Helper.GetListCadastreType(db, ref list_cadastre);
        list_cadastre.ForEach(o => ViewBag.list_cadastre.Add(new SelectListItem { Text = o.name, Value = o.type_code.ToString() }));

    }

    List<EGH01DB.Types.PetrochemicalCategories> list_petrochemical = new List<EGH01DB.Types.PetrochemicalCategories>();
    ViewBag.list_petrochemical = new List<SelectListItem>();
    if (db != null)
    {
        Helper.GetListPetrochemicalCategories(db, ref list_petrochemical);
        list_petrochemical.ForEach(o => ViewBag.list_petrochemical.Add(new SelectListItem { Text = o.name, Value = o.type_code.ToString() }));

    }

    List<EGH01DB.Types.PenetrationDepth> list_penetration = new List<EGH01DB.Types.PenetrationDepth>();
    ViewBag.list_penetration = new List<SelectListItem>();
    if (@Model != null)
    {
        Helper.GetListPenetrationDepth(@Model, ref list_penetration);
        list_penetration.ForEach(o => ViewBag.list_penetration.Add(new SelectListItem { Text = o.name, Value = o.type_code.ToString() }));

    }

    List<EGH01DB.Types.EmergencyClass> list_emergency = new List<EGH01DB.Types.EmergencyClass>();
    ViewBag.list_emergency = new List<SelectListItem>();
    if (@Model != null)
    {
        Helper.GetListEmergencyClass(@Model, ref list_emergency);
        list_emergency.ForEach(o => ViewBag.list_emergency.Add(new SelectListItem { Text = o.name, Value = o.type_code.ToString() }));

    }

    List<EGH01DB.Types.SoilPollutionCategories> list_soil = new List<EGH01DB.Types.SoilPollutionCategories>();
    ViewBag.list_soil = new List<SelectListItem>();
    if (@Model != null)
    {
        Helper.GetListSoilPollutionCategories(@Model, ref list_soil);
        list_soil.ForEach(o => ViewBag.list_soil.Add(new SelectListItem { Text = o.name, Value = o.code.ToString() }));

    }

    List<EGH01DB.Types.WaterPollutionCategories> list_water = new List<EGH01DB.Types.WaterPollutionCategories>();
    ViewBag.list_water = new List<SelectListItem>();
    if (@Model != null)
    {
        Helper.GetListWaterPollutionCategories(@Model, ref list_water);
        
        list_water.ForEach(o => ViewBag.list_water.Add(new SelectListItem { Text =  o.name, Value = o.code.ToString() }));

    }
    List<EGH01DB.Types.WaterProtectionArea> list_waterArea = new List<EGH01DB.Types.WaterProtectionArea>();
    ViewBag.list_waterArea = new List<SelectListItem>();
    if (@Model != null)
    {
        Helper.GetListWaterProtectionArea(@Model, ref list_waterArea);
        list_waterArea.ForEach(o => ViewBag.list_waterArea.Add(new SelectListItem { Text = o.name, Value = o.type_code.ToString() }));

    }

    List<EGH01DB.Types.SoilCleaningMethod> list_soilCleaning = new List<EGH01DB.Types.SoilCleaningMethod>();
    ViewBag.list_soilCleaning = new List<SelectListItem>();
    if (@Model != null)
    {
        Helper.GetListSoilCleaningMethods(@Model, ref list_soilCleaning);
        list_soilCleaning.ForEach(o => ViewBag.list_soilCleaning.Add(new SelectListItem { Text = o.method_description, Value = o.type_code.ToString() }));

    }

    List<EGH01DB.Types.WaterCleaningMethod> list_waterCleaning = new List<EGH01DB.Types.WaterCleaningMethod>();
    ViewBag.list_waterCleaning = new List<SelectListItem>();
    if (@Model != null)
    {
        Helper.GetListWaterCleaningMethods(@Model, ref list_waterCleaning);
        list_waterCleaning.ForEach(o => ViewBag.list_waterCleaning.Add(new SelectListItem { Text = o.method_description, Value = o.type_code.ToString() }));

    }

}
@Html.Partial("_TypeHeadMenu", new TypeViewMenu { Controller = "EGHORT", Action = "RehabilitationMethods", Menu = head })
@using (Html.BeginForm("RehabilitationMethodsCreate", "EGHORT"))
{
    <div class="box">
        <div class="boxdata">
    <p><label class="boxdata-label-30">Тип техногенного объекта</label>@Html.DropDownList("list_type")</p>
    <p><label class="boxdata-label-30">Категория земли</label>  @Html.DropDownList("list_cadastre")</p>
    <p><label class="boxdata-label-30">Категория разлитого нефтепродукта</label>@Html.DropDownList("list_petrochemical")</p>
    <p><label class="boxdata-label-30">Классификация аварии</label>@Html.DropDownList("list_emergency")</p>
    <p><label class="boxdata-label-30">Категория глубины проникновения</label>@Html.DropDownList("list_penetration")</p>
    <p><label class="boxdata-label-30">Категория загрязнения грунтов</label>@Html.DropDownList("list_soil")</p>
    <p><label class="boxdata-label-30">Достижение грунтовых вод </label>&emsp;<input type="checkbox" class="boxdata-label-30" name="waterachieved" value="true">&emsp;</p>
    <p><label class="boxdata-label-30">Категория загрязнения грунтовых вод</label>@Html.DropDownList("list_water")</p>
    <p><label class="boxdata-label-30">Категория водоохранной территории</label>@Html.DropDownList("list_waterArea")</p>
    <p><label class="boxdata-label-30">Категория методов ликвидации загрязнения почвогрунтов</label>@Html.DropDownList("list_soilCleaning")</p>
    <p><label class="boxdata-label-30">Категория методов ликвидации загрязнения грунтовых вод </label>@Html.DropDownList("list_waterCleaning")</p>
        </div>
        @Html.Partial("_TypeLineMenu", create)

    </div>
}

