@using EGH01.Core;
@using EGH01.Models.EGHORT;
@using EGH01DB;
@using EGH01DB.Primitives;
@using EGH01DB.Types;
@using EGH01.Core;
@using EGH01.Models.EGH;
@model EGH01DB.ORTContext

@{

    Layout = "~/Views/Shared/EGHLayout.cshtml";
    EGH01DB.ORTContext ort = (EGH01DB.ORTContext)Model;
    WaterPollutionCategoriesView context = (WaterPollutionCategoriesView)Model.GetViewContext("WaterPollutionCategoriesCreate");
    if (context == null) { Model.SaveViewContext("WaterPollutionCategoriesCreate", context = new WaterPollutionCategoriesView()); };
    Menu head = new Menu(
                  new Menu.MenuItem("Создать", "WaterPollutionCategories.Create", false),
                  new Menu.MenuItem("Excel-формат", "WaterPollutionCategories.Excel", false)
                );

    Menu create = new Menu(
                          new Menu.MenuItem("Создать", "WaterPollutionCategories.Create.Create", true),
                          new Menu.MenuItem("Отказаться", "WaterPollutionCategories.Create.Cancel", true)
                        );

}

@Html.Partial("_TypeHeadMenu", new TypeViewMenu { Controller = "EGHORT", Action = "WaterPollutionCategories", Menu = head })
@using (Html.BeginForm("WaterPollutionCategoriesCreate", "EGHORT"))
{
    {

        @ViewBag.error

    }

    <div class="box">
            <div class="boxdata">
              
                <p>
                    <label class="boxdata-label-30">Наименование категории загрязнения  грунтовых вод</label>
@{

    String Name = " ";
    if (context.name != null)
    {

        Name = context.name;
    }
                    <input class="boxdata-input-20" type="text" name="name" value=@Name>
    }
                </p>
                <p>
                    <label class="boxdata-label-40">Диапазон кратности превышения показателя ПДК<sup><small></small></sup></label>
@{
    string Min = "";
    if (context.min != null)
    {
        Min = ((float?)context.min).ToString().Replace(',', '.');

    }
                       <input class="boxdata-input-20" type="number" step="0.1" min="0" name="min" value=@Min />
}
@{
    string Max = "";
    if (context.max != 0.0f)
    {
        Max = ((float?)context.max).ToString().Replace(',', '.');

    }
                           <input class="boxdata-input-20" type="number" step="0.1" min="0" name="max" value=@Max />               
}
                </p>
            </div>

            @Html.Partial("_TypeLineMenu", create)
    </div>
    }

    

