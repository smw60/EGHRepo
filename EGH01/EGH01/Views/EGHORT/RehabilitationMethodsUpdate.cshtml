@using EGH01.Core;
@using EGH01.Models.EGH;
@using EGH01DB.Primitives;
@using EGH01DB.Objects;
@using EGH01DB.Types;
@*@model EGH01DB.Types*@
@{
    EGH01DB.RGEContext dbrge = new EGH01DB.RGEContext();
    EGH01DB.ORTContext dbort = new EGH01DB.ORTContext();
    Layout = "~/Views/Shared/EGHLayout.cshtml";
    Menu head = new Menu(
          new Menu.MenuItem("Создать", "RehabilitationMethods.Create", false),
          new Menu.MenuItem("Excel-формат", "RehabilitationMethods.Excel", false)
        );

    Menu delete = new Menu(
                          new Menu.MenuItem("Изменить", "RehabilitationMethods.Update.Update", true),
                          new Menu.MenuItem("Отказаться", "RehabilitationMethods.Update.Cancel", true)
                        );



    {
        List<EGH01DB.Types.RiskObjectType> list_type = new List<EGH01DB.Types.RiskObjectType>();
        List<SelectListItem> listtype = ViewBag.selectlist = new List<SelectListItem>();

        Helper.GetListRiskObjectType(dbrge, ref list_type);

        list_type.ForEach(o => ViewBag.list_type.Add(new SelectListItem { Text = o.name, Value = o.type_code.ToString() }));

        if (Model.type != null)
        {
            SelectListItem sit = listtype.FirstOrDefault(s => s.Value == Model.type.type_code.ToString());
            sit.Selected = true;
        }
    }


    {
        List<EGH01DB.Types.CadastreType> list_cadastre = new List<EGH01DB.Types.CadastreType>();
        List<SelectListItem> listcadastre = ViewBag.list_cadastre = new List<SelectListItem>();

        Helper.GetListCadastreType(dbrge, ref list_cadastre);
        list_cadastre.ForEach(o => ViewBag.list_cadastre.Add(new SelectListItem { Text = o.name, Value = o.type_code.ToString() }));

        if (@Model.cadastretype != null)
        {
            SelectListItem sic = listcadastre.FirstOrDefault(s => s.Value == Model.cadastretype.type_code.ToString());
            sic.Selected = true;

        }
                }
@Html.Partial("_TypeHeadMenu", new TypeViewMenu { Controller = "EGHCORT", Action = "RehabilitationMethods", Menu = head })

@using (Html.BeginForm("RehabilitationMethodsUpdate", "EGHORT"))
{


    <div class="box">
        <div class="boxdata">
            <p>
                <label class="boxdata-label-30">Наименование метода</label>
                <textarea class="boxdata-input-50" name="name" rows="2"></textarea>
            </p>
            <p><label class="boxdata-label-30">Тип техногенного объекта</label>@Html.DropDownList("list_type")</p>
            <p><label class="boxdata-label-30">Кадастровый тип земли</label>  @Html.DropDownList("list_cadastre")</p>
            <p><label class="boxdata-label-30">Категория разлитого нефтепродукта</label>@Html.DropDownList("list_petrochemical")</p>
            <p><label class="boxdata-label-30">Классификация аварии</label>@Html.DropDownList("list_emergency")</p>
            <p><label class="boxdata-label-30">Категория глубины проникновения</label>@Html.DropDownList("list_penetration")</p>
            <p><label class="boxdata-label-30">Категория загрязнения грунтов</label>@Html.DropDownList("list_soil")</p>
            <p><label class="boxdata-label-30">Достижение грунтовых вод </label>&emsp;<input type="checkbox" class="boxdata-label-30" name="waterachieved" value="true">&emsp;</p>
            <p><label class="boxdata-label-30">Категория загрязнения грунтовых вод</label>@Html.DropDownList("list_water")</p>
            <p><label class="boxdata-label-30">Категория водоохранной территории</label>@Html.DropDownList("list_waterArea")</p>
            <p><label class="boxdata-label-30">Категория методов ликвидации загрязнения почвогрунтов</label>@Html.DropDownList("list_soilCleaning")</p>
            <p><label class="boxdata-label-30">Категория методов ликвидации загрязнения грунтовых вод </label>@Html.DropDownList("list_waterCleaning")</p>
        </div>
        @Html.Partial("_TypeLineMenu", delete)
    </div>
}