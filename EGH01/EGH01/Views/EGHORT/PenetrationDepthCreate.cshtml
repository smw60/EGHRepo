@using EGH01.Core;
@using EGH01.Models.EGHORT;
@using EGH01DB;
@using EGH01DB.Primitives;
@using EGH01DB.Types;
@using EGH01.Core;
@using EGH01.Models.EGH;
@model EGH01DB.ORTContext

@{

    Layout = "~/Views/Shared/EGHLayout.cshtml";

    EGH01DB.RGEContext dbrge = new RGEContext();
    EGH01DB.ORTContext gea = (EGH01DB.ORTContext)Model;
    PenetrationDepthView context = (PenetrationDepthView)Model.GetViewContext("PenetrationDepthCreate");
    if (context == null) { Model.SaveViewContext("PenetrationDepthCreate", context = new PenetrationDepthView()); };
    Menu start = new Menu(
          new Menu.MenuItem("Создать", "PenetrationDepth.Create", true),
          new Menu.MenuItem("Отказаться", "PenetrationDepth.Cancel", true)
        );

    Menu create = new Menu(
                          new Menu.MenuItem("Создать", "PenetrationDepth.Create.Create", true),
                          new Menu.MenuItem("Отказаться", "PenetrationDepth.Create.Cancel", true)
                        );

}

@Html.Partial("_TypeHeadMenu", new TypeViewMenu { Controller = "EGHORT", Action = "PenetrationDepth", Menu = start })
@using (Html.BeginForm("PenetrationDepthCreate", "EGHORT"))
{
    {

        @ViewBag.error;

    }
    <div class="box">
        <fieldset form="SoilPollutionCategories">
            <div class="boxdata">
                <p>
                    <label class="boxdata-label-30">Наименование категории</label>
@{

    String Name = " ";
    if (context.name != null)
    {

        Name = context.name;
    }
    <input class="boxdata-input-30" type="text" name="name" value=@Name>
}
                </p>
                <p>
                    <label class="boxdata-label-30">Диапазон глубины проникновения НП, м <sup><small></small></sup></label>
@{
    string Min = "";
    if (context.mindepth != null)
    {
        Min = ((float?)context.mindepth).ToString().Replace(',', '.');

    }
                    <input class="boxdata-input-20" type="number" step="0.1" name="mindepth" value=@Min />
    }
@{
    string Max = "";
    if (context.maxdepth != 0.0f)
    {
        Max = ((float?)context.maxdepth).ToString().Replace(',', '.');

    }
        <input class="boxdata-input-20" type="number" step="0.1" min="0" name="maxdepth" value=@Max />
}
                </p>
            </div>
        </fieldset>
        @Html.Partial("_TypeLineMenu", create)
    </div>
}

