@using EGH01.Core;
@using EGH01.Models.EGHGEA;
@using EGH01DB;
@using EGH01DB.Primitives;
@using EGH01DB.Types;
@using EGH01.Core;
@using EGH01.Models.EGH;
@model EGH01DB.GEAContext

@{

    Layout = "~/Views/Shared/EGHLayout.cshtml";
    EGH01DB.GEAContext gea = (EGH01DB.GEAContext)Model;
    EGH01DB.RGEContext dbrge = new RGEContext();
    SoilPollutionCategoriesView context = (SoilPollutionCategoriesView)Model.GetViewContext("SoilPollutionCategoriesCreate");
    if (context == null) { Model.SaveViewContext("SoilPollutionCategoriesCreate", context = new SoilPollutionCategoriesView()); };
    Menu start = new Menu(
                  new Menu.MenuItem("Создать", "SoilPollutionCategories.Create", true),
                  new Menu.MenuItem("Отказаться", "SoilPollutionCategories.Cancel", true)
                );

    Menu create = new Menu(
                          new Menu.MenuItem("Создать", "SoilPollutionCategories.Create.Create", true),
                          new Menu.MenuItem("Отказаться", "SoilPollutionCategories.Create.Cancel", true)
                        );
    List<EGH01DB.Types.CadastreType> list_cadastre = new List<EGH01DB.Types.CadastreType>();
    ViewBag.list_cadastre = new List<SelectListItem>();
    if (dbrge != null)
    {
        Helper.GetListCadastreType(dbrge, ref list_cadastre);
        list_cadastre.ForEach(o => ViewBag.list_cadastre.Add(new SelectListItem { Text = o.name, Value = o.type_code.ToString() }));

    }

}

@Html.Partial("_TypeHeadMenu", new TypeViewMenu { Controller = "EGHGEA", Action = "SoilPollutionCategories", Menu = start })
@using (Html.BeginForm("SoilPollutionCategoriesCreate", "EGHGEA"))
{
    {

        @ViewBag.error;

    }
    <div class="box">
        <fieldset form="SoilPollutionCategories">
            <div class="boxdata">
                <p>
                    <label class="boxdata-label-30">Наименование категории загрязнения грунта</label>
                    @{

                        String Name = "";
                        if (context.name != null)
                        {

                            Name = context.name;
                        }
                        <textarea class="boxdata-input-50" name="Name">@Name</textarea>
                        @*<input class="boxdata-input-20" type="text" name="name" value="@Name" />*@
                    }
                 
                </p>
                <p>
                  
                    <label class="boxdata-label-30">Диапазон кратности превышения показателя ПДК <sup><small></small></sup></label>
                    @{
                        string Min = "";
                        if (context.min != null)
                        {
                            Min = ((float?)context.min).ToString().Replace(',', '.');

                        }
                        <input class="boxdata-input-20" type="number" step="0.1" min="0" name="min" value="@Min" />

                    }
                    @{
                        string Max = "";
                        if (context.max != 0.0f)
                        {
                            Max = ((float?)context.max).ToString().Replace(',', '.');

                        }
                        <input class="boxdata-input-20" type="number" step="0.1" min="0" name="max" value="@Max" />

                    }
                   
                </p>
                <p>
                    <label class="boxdata-label-30">Категория земли</label> @Html.DropDownList("list_cadastre")
                </p>
            </div>
        </fieldset>
        @Html.Partial("_TypeLineMenu", create)
    </div>
}

