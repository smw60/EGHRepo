@using EGH01.Core;
@using EGH01.Models.EGH;
@using EGH01DB.Primitives;
@using EGH01DB.Objects;
@using EGH01DB.Types;
@model EGH01DB.CAIContext
@{
    EGH01DB.CAIContext db = new EGH01DB.CAIContext();
    Layout = "~/Views/Shared/EGHLayout.cshtml";
    Menu head = new Menu(
                          new Menu.MenuItem("Создать", "RiskObject.Create", false),
                          new Menu.MenuItem("Excel-формат", "RiskObject.Excel", false)
                        );

    Menu create = new Menu(
                          new Menu.MenuItem("Создать", "RiskObject.Create.Create", true),
                          new Menu.MenuItem("Отказаться", "RiskObject.Create.Cancel", true)
                        );
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&key=AIzaSyDD-BQGwH6mEgOBp15GhEpzm8h1JzP-fpg"></script>

    List<EGH01DB.Types.RiskObjectType> list_type = new List<EGH01DB.Types.RiskObjectType>();
    ViewBag.selectlist = new List<SelectListItem>();
    if (db != null)
    {
        Helper.GetListRiskObjectType(db, ref list_type);
        list_type.ForEach(o => ViewBag.selectlist.Add(new SelectListItem { Text = o.name, Value = o.type_code.ToString() }));

    }

    List<EGH01DB.Types.CadastreType> list_cadastre = new List<EGH01DB.Types.CadastreType>();
    ViewBag.list_cadastre = new List<SelectListItem>();
    if (db != null)
    {
        Helper.GetListCadastreType(db, ref list_cadastre);
        list_cadastre.ForEach(o => ViewBag.list_cadastre.Add(new SelectListItem { Text = o.name, Value = o.type_code.ToString() }));

    }

    List<EGH01DB.Types.GroundType> list_groundType = new List<EGH01DB.Types.GroundType>();
    ViewBag.list_groundType = new List<SelectListItem>();
    if (db != null)
    {
        Helper.GetListGroundType(db, ref list_groundType);
        list_groundType.ForEach(o => ViewBag.list_groundType.Add(new SelectListItem { Text = o.name, Value = o.type_code.ToString() }));

    }

    List<EGH01DB.Types.Region> list_region = new List<EGH01DB.Types.Region>();
    ViewBag.list_region = new List<SelectListItem>();
    if (db != null)
    {
        Helper.GetListRegion(db, ref list_region);
        list_region.ForEach(o => ViewBag.list_region.Add(new SelectListItem { Text = o.name, Value = o.region_code.ToString() }));

    }

    List<EGH01DB.Types.District> list_district = new List<EGH01DB.Types.District>();
    ViewBag.list_district = new List<SelectListItem>();
    if (@Model != null)
    {
        Helper.GetListDistrict(db, ref list_district);
        list_district.ForEach(o => ViewBag.list_district.Add(new SelectListItem { Text = o.name, Value = o.code.ToString() }));

    }
}
@Html.Partial("_TypeHeadMenu", new TypeViewMenu { Controller = "EGHCAI", Action = "RiskObject", Menu = head })
@using (Html.BeginForm("RiskObjectCreate", "EGHCAI"))
{
    <div class="box">
        <div class="boxdata">
            <p>
                <label class="boxdata-label-30">Тип техногенного объекта</label>@Html.DropDownList("selectlist")
            </p>
            <p>
                <label class="boxdata-label-30">Наименование</label>
                <textarea class="boxdata-input-50" name="Name" rows="2"></textarea>
            </p>
            <fieldset  form="RiskObject">
                <legend >Адрес</legend>
                <p><label class="boxdata-label-30">Область</label>@Html.DropDownList("list_region")
                </p>
                <p> <label class="boxdata-label-30">Район</label>  @Html.DropDownList("list_district")
                </p>
                <p><label class="boxdata-label-30">Город(населенный пункт),улица,дом</label>
                    <input class="boxdata-input-50" type="text" name="Adress" value=" " />
                </p>
                <p><label class="boxdata-label-30">Телефон</label>
                    <input class="boxdata-input-50" type="text" name="phone" value=" " />
                </p>
                <p><label class="boxdata-label-30">Факс</label>
                    <input class="boxdata-input-50" type="text" name="fax" value=" " />
                </p>
                <p><label class="boxdata-label-30">Электронный адрес</label>
                    <input class="boxdata-input-50" type="text" name="email" value=" " />
                </p>

            </fieldset>
            <fieldset  form="RiskObject">
                <legend >Объем резервуаров для хранения нефтепродутов, м<sup>3</sup></legend>
                <p>
                    <label class="boxdata-label-30">Наземные</label>
                    <input class="boxdata-input-50" type="number" name="groundtank" value=" " min="0" step="0.1"  />
                </p>
                <p>
                    <label class="boxdata-label-30">Подземные</label>
                    <input class="boxdata-input-50" type="number" name="undergroundtank" value=" " min="0" step="0.1" />
                </p>
            </fieldset>
            <fieldset  form="RiskObject">
                <legend >Наличие очистных сооружений</legend>
                <p>
                    <input type="checkbox" class="boxdata-label-30" name="watertreatment" value="true">&emsp; <label>&emsp;Для дождевого стока</label>
                </p>
                <p>
                    <input type="checkbox" class="boxdata-label-30" name="watertreatmentcollect" value="true">&emsp; <label>&emsp;Резервуар для сбора проливов</label>
                </p>
            </fieldset>
            <p>
                <label class="boxdata-label-30">Дата ввода в эксплуатацию</label>
                <input class="boxdata-input-50" type="date" name="foundationdate" value=" " />
            </p>
            <p>
                <label class="boxdata-label-30">Дата последней реконструкции  </label>
                <input class="boxdata-input-50" type="date" name="reconstractiondate" value=" " />
            </p>

            <fieldset  form="RiskObject">
                <legend >Географические координаты</legend>
                <p>
                    <label class="boxdata-label-30">Широта</label>
                    <input class="boxdata-input-10" type="number" name="Latitude" id="Latitude" value=" " min="-90" max="90" />&deg;
                    <input class="boxdata-input-10" type="number" name="Lat_m" value=" " min="-90" max="90" />&acute;
                    <input class="boxdata-input-10" type="number" name="Lat_s" value=" " min="0" max="60" step="0.01" />&quot;
                </p>
                <p>
                <label class="boxdata-label-30">Долгота</label>
                    <input class="boxdata-input-10" type="number" name="Lngitude" id="Lngitude" value=" " max="180" min="0" />&deg;
                    <input class="boxdata-input-10" type="number" name="Lng_m" value=" " min="-90" max="90" />&acute;
                    <input class="boxdata-input-10" type="number" name="Lng_s" value=" " min="0" max="60" step="0.01" />&quot;
                </p>
                <p class="center"><input type="button" id="redraw" value="Отобразить карту по координатам" /></p>
                <div id="canvas" class="map"></div>
                <input type="hidden" id="base64" name="base64" value="" />
                <img id="canvasImg" />

            </fieldset>
            <fieldset form="RiskObject">
                <legend >Геологические данные</legend>

                <p>
                    <label class="boxdata-label-30">Категория земли</label> @Html.DropDownList("list_cadastre")
                </p>
                <p>
                    <label class="boxdata-label-30">Грунт</label> @Html.DropDownList("list_groundType")
                </p>
                <p>
                    <label class="boxdata-label-30">Глубина грунтовых вод, м</label>
                    <input class="boxdata-input-50" type="number" name="waterdeep" value=" " min="0" step="0.01" />
                </p>
                <p>
                    <label class="boxdata-label-30">Высота над уровнем моря, м</label>
                    <input class="boxdata-input-50" type="number" name="height" value=" " min="0" step="0.01" />
                </p>

            </fieldset>
        </div>
       
      @section scripts {
    <script type="text/javascript">

        $(document).ready(function () {
            GetMap();
        });
        $("#save").click(function () {
            var data = getBase64Image(document.getElementById("canvasImg"));

            document.getElementById("canvasImg2") = data;
        });
    function GetMap() {

        google.maps.visualRefresh = true;
        var create = new google.maps.LatLng(53.8842846, 27.5526839);
        var mapOptions = {
            zoom: 12,
            center: create,
            mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
        };

        var map = new google.maps.Map(document.getElementById("canvas"), mapOptions);
        var myLatlng = new google.maps.LatLng(53.8842846, 27.5526839);
        var marker = new google.maps.Marker({
            position: myLatlng,
            map: map,
        });
        marker.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png')
    }

    function getBase64Image_new(path) {
        var imgE = document.createElement("img");
        imgE.id = "imgE";
        imgE.crossOrigin = 'Anonymous';
        imgE.onload = function () {
            document.getElementById("canvas").appendChild(imgE);

            var canvas = document.createElement("canvas");
            canvas.width = 640;
            canvas.height = 600;
            var ctx = canvas.getContext("2d");
            ctx.drawImage(imgE, 0, 0);
            var dataURL = canvas.toDataURL("image/png");
            document.getElementById("base64").value = dataURL;
        }
        imgE.src = path;
    }

    function GetMapCoordinat() {

        google.maps.visualRefresh = true;
        var create = new google.maps.LatLng(Latitude.value, Lngitude.value);

        var mapOptions = {
            zoom: 12,
            center: create,
            mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
        };
     
        var map = new google.maps.Map(document.getElementById("canvas"), mapOptions);
         
        var myLatlng = new google.maps.LatLng(Latitude.value, Lngitude.value);

        var marker = new google.maps.Marker({
            position: myLatlng,
            map: map,
        });
      
        marker.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png')

        var path = "http://maps.google.com/maps/api/staticmap?sensor=false&center=" +
            myLatlng.lat() + "," + myLatlng.lng() +
          "&zoom=" + map.zoom +
          "&size=640x600" +
          "&markers=color:red%7C"+myLatlng.lat() + "," + myLatlng.lng() +
            "&key=AIzaSyCX4kdHa13iAH0dVcEm7SuV_VNcuxoUQNs";
        getBase64Image_new(path);

        }
    $("#redraw").click(function () {
        GetMapCoordinat();
    });

        
    </script>
}
        @Html.Partial("_TypeLineMenu", create)

    </div>
       
    }

