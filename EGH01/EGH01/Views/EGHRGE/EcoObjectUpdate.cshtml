@using EGH01.Core;
@using EGH01.Models.EGH;
@using EGH01DB.Primitives;
@using EGH01DB.Types;
@model EGH01DB.Objects.EcoObject

@{

    Layout = "~/Views/Shared/EGHLayout.cshtml";
    Menu start = new Menu(
                          new Menu.MenuItem("Создать", "EcoObject.Create", true),
                          new Menu.MenuItem("Отказаться", "EcoObject.Cancel", true)
                        );

    Menu update = new Menu(
                          new Menu.MenuItem("Изменить", "EcoObject.Update.Update", true),
                          new Menu.MenuItem("Отказаться", "EcoObject.Update.Cancel", true)
                        );

    EGH01DB.RGEContext db = new EGH01DB.RGEContext();
    {
        List<CadastreType> list_cadastre = new List<CadastreType>();
        List<SelectListItem> listcadastre = ViewBag.list_cadastre = new List<SelectListItem>();

        Helper.GetListCadastreType(db, ref list_cadastre);
        list_cadastre.ForEach(o => ViewBag.list_cadastre.Add(new SelectListItem { Text = o.name, Value = o.type_code.ToString() }));
        if (Model.cadastretype != null)
        {
            SelectListItem sic = listcadastre.FirstOrDefault(s => s.Value == Model.cadastretype.type_code.ToString());
            sic.Selected = true;

        }
    }
    {
        List<EcoObjectType> list_ecoType = new List<EcoObjectType>();
        List<SelectListItem> list = ViewBag.list_ecoType = new List<SelectListItem>();

        Helper.GetListEcoObjectType(db, ref list_ecoType);
        list_ecoType.ForEach(o => ViewBag.list_ecoType.Add(new SelectListItem { Text = o.name, Value = o.type_code.ToString() }));

        if (Model.ecoobjecttype != null)
        {
            SelectListItem si = list.FirstOrDefault(s => s.Value == Model.ecoobjecttype.type_code.ToString());
            si.Selected = true;
        }

    }

    {
        List<GroundType> list_groundType = new List<GroundType>();
        List<SelectListItem> list = ViewBag.list_groundType = new List<SelectListItem>();

        Helper.GetListGroundType(db, ref list_groundType);
        list_groundType.ForEach(o => ViewBag.list_groundType.Add(new SelectListItem { Text = o.name, Value = o.type_code.ToString() }));

        if (Model.groundtype != null)
        {
            SelectListItem sig = list.FirstOrDefault(s => s.Value == Model.groundtype.type_code.ToString());
            sig.Selected = true;
        }
    }
}
@Html.Partial("_TypeHeadMenu", new TypeViewMenu { Controller = "EGHRGE", Action = "EcoObject", Menu = start })
@using (Html.BeginForm("EcoObjectUpdate", "EGHRGE"))
{
    <div class="box">
        <div class="boxdata">
            <p>
                <label class="boxdata-label-30">Наименование природоохранного объекта</label>
                <input class="boxdata-input-30" type="text" name="name" value="@Model.name" />
                <input type="hidden" value="@Model.id" name="id">
            </p>
            <p>
                <label class="boxdata-label-30">Широта</label>
                <input class="boxdata-input-10" type="number" name="Latitude" value="@Model.coordinates.lat.d.ToString()" min="-90" max="90" />&deg;
                <input class="boxdata-input-10" type="number" name="Lat_m" value="@Model.coordinates.lat.m.ToString()" min="-90" max="90" />&acute;
                <input class="boxdata-input-10" type="number" name="Lat_s" value="@Model.coordinates.lat.s.ToString("0.00").Replace(',' , '.')" min="0" max="60" step="0.01" />&quot;
            </p>
            <p>
                <label class="boxdata-label-30">Долгота</label>
                <input class="boxdata-input-10" type="number" name="Lngitude" value="@Model.coordinates.lng.d.ToString()" max="180" min="0" />&deg;
                <input class="boxdata-input-10" type="number" name="Lng_m" value="@Model.coordinates.lng.m.ToString()" min="-90" max="90" />&acute;
                <input class="boxdata-input-10" type="number" name="Lng_s" value="@Model.coordinates.lng.s.ToString("0.00").Replace(',' , '.')" min="0" max="60" step="0.01" />&quot;
            </p>
            <p>
                <label class="boxdata-label-30">Тип природохранного объекта</label>@Html.DropDownList("list_ecoType")
            </p>
            <p>
                <label class="boxdata-label-30">Категория  земли</label>@Html.DropDownList("list_cadastre")
            </p>

            <p>
                <label class="boxdata-label-30">Грунт</label> @Html.DropDownList("list_groundType")
            </p>
            <p>
                <label class="boxdata-label-30">Высота над уровнем моря, м</label>
                <input class="boxdata-input-50" type="number" name="height" value="@Model.height.ToString("0.00").Replace(',' , '.')" min="0" step="0.01" />
            </p>
            <p>
                <label class="boxdata-label-30">Глубина грунтовых вод, м</label>
                <input class="boxdata-input-50" type="number" name="waterdeep" value="@Model.waterdeep.ToString("0.00").Replace(',' , '.')" min="0" step="0.01" />
            </p>
        </div>
        @Html.Partial("_TypeLineMenu", update)
    </div>
                    }
