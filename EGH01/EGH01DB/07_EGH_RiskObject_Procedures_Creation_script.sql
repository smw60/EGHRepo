----------------- Создание процедур базы данных -----------------------------
----		Будут созданы следующие процедуры
---- Техногенный объект    
-----------------------------------------------------------------------------
---- Добавление техногенного объекта
---- Удаление техногенного объекта 
---- Получение техногенного объекта по ID 
---- Получение списка техногенных объектов 
---- Обновление техногенного объекта
---- Получение следующего ID техногенного объекта
---- Получение списка техногенных объектов, находящихся на расстроянии <D(метров) от точки (X,Y)
---- Получение списка техногенных объектов, находящихся на расстроянии >D1(метров) и <D1(метров) от точки (X,Y)
-----------------------------------------------------------------------------
USE EGH;
go

drop procedure EGH.CreateRiskObject;
drop procedure EGH.DeleteRiskObject;
drop procedure EGH.GetRiskObjectByID;
drop procedure EGH.GetRiskObjectList;
drop procedure EGH.UpdateRiskObject;
drop procedure EGH.GetNextRiskObjectId;
drop procedure EGH.GetListRiskObjectOnDistanceLessThanD;
drop procedure EGH.GetListRiskObjectOnDistanceLessThanD2MoreThanD1;
GO
------------------------------------

-- Добавление техногенного объекта 
create procedure EGH.CreateRiskObject(
		    @IdТехногенногоОбъекта int,  
			@КодТипаТехногенногоОбъекта int,
			@КодТипаНазначенияЗемель int,
			@НаименованиеТехногенногоОбъекта nvarchar(MAX),
			@АдресТехногенногоОбъекта nvarchar(MAX),
			@ШиротаГрад float,
			@ДолготаГрад float,
			@ТипГрунта int,
			@ГлубинаГрунтовыхВод float,
			@ВысотаУровнемМоря float)
as begin 
declare @rc int  = @IdТехногенногоОбъекта;
	begin try
		insert into dbo.ТехногенныйОбъект(
					[IdТехногенногоОбъекта],
					[КодТипаТехногенногоОбъекта],
					[КодТипаНазначенияЗемель],
					[НаименованиеТехногенногоОбъекта],
					[АдресТехногенногоОбъекта],
					[ШиротаГрад],
					[ДолготаГрад],
					[ТипГрунта],
					[ГлубинаГрунтовыхВод],
					[ВысотаУровнемМоря])
			values (@IdТехногенногоОбъекта,  
					@КодТипаТехногенногоОбъекта,
					@КодТипаНазначенияЗемель,
					@НаименованиеТехногенногоОбъекта,
					@АдресТехногенногоОбъекта,
					@ШиротаГрад,
					@ДолготаГрад,
					@ТипГрунта,
					@ГлубинаГрунтовыхВод,
					@ВысотаУровнемМоря); 
	end try
	begin catch
	    set @rc = -1;
	end catch 
  return @rc;  
end;
go

-- Удаление техногенного объекта
create procedure EGH.DeleteRiskObject(@IdТехногенногоОбъекта int)
as begin 
    declare @rc int  = @IdТехногенногоОбъекта;
    begin try 
	 delete dbo.ТехногенныйОбъект where IdТехногенногоОбъекта = @IdТехногенногоОбъекта;
	end try
	begin catch
	    set @rc = -1;
	end catch   
	return @rc;
end;
go
-- Получение техногенного объекта  по ID 
create  procedure EGH.GetRiskObjectByID(@IdТехногенногоОбъекта int)
as begin 
    declare @rc int = -1;
select [IdТехногенногоОбъекта],
		T.[КодТипаТехногенногоОбъекта] КодТипаТехногенногоОбъекта,
		[НаименованиеТипаТехногенногоОбъекта],
		[КодТипаНазначенияЗемель],
		[НаименованиеНазначенияЗемель],
		[ПДК],
		[НаименованиеТехногенногоОбъекта],
		[АдресТехногенногоОбъекта],
		[ШиротаГрад],
		[ДолготаГрад],
		[ТипГрунта],
		[НаименованиеТипаГрунта],
		[КоэфПористости],
		[КоэфЗадержкиМиграции],
		[КоэфФильтрацииВоды],
		[КоэфДиффузии],
		[КоэфРаспределения],
		[КоэфСорбции],
		[ГлубинаГрунтовыхВод],
		[ВысотаУровнемМоря]
 from dbo.ТехногенныйОбъект O 
			inner join dbo.ТипТехногенногоОбъекта T on O.КодТипаТехногенногоОбъекта=T.КодТипаТехногенногоОбъекта
			inner join dbo.ТипГрунта G on O.ТипГрунта = G.КодТипаГрунта
			inner join dbo.НазначениеЗемель Z on O.КодТипаНазначенияЗемель = Z.КодНазначенияЗемель
		 where IdТехногенногоОбъекта = @IdТехногенногоОбъекта;  
	set @rc = @@ROWCOUNT;
	return @rc;    
end;
go
-- Получение списка техногенных объектов
create procedure EGH.GetRiskObjectList
 as begin
	declare @rc int = -1;
	select [IdТехногенногоОбъекта],
		T.[КодТипаТехногенногоОбъекта] КодТипаТехногенногоОбъекта,
		[НаименованиеТипаТехногенногоОбъекта],
		[КодТипаНазначенияЗемель],
		[НаименованиеНазначенияЗемель],
		[ПДК],
		[НаименованиеТехногенногоОбъекта],
		[АдресТехногенногоОбъекта],
		[ШиротаГрад],
		[ДолготаГрад],
		[ТипГрунта],
		[НаименованиеТипаГрунта],
		[КоэфПористости],
		[КоэфЗадержкиМиграции],
		[КоэфФильтрацииВоды],
		[КоэфДиффузии],
		[КоэфРаспределения],
		[КоэфСорбции],
		[ГлубинаГрунтовыхВод],
		[ВысотаУровнемМоря]
 from dbo.ТехногенныйОбъект O 
			inner join dbo.ТипТехногенногоОбъекта T on O.КодТипаТехногенногоОбъекта=T.КодТипаТехногенногоОбъекта
			inner join dbo.ТипГрунта G on O.ТипГрунта = G.КодТипаГрунта
			inner join dbo.НазначениеЗемель Z on O.КодТипаНазначенияЗемель = Z.КодНазначенияЗемель;
	set @rc = @@ROWCOUNT;
	return @rc;    
end;
go
-- Обновление техногенного объекта
create  procedure EGH.UpdateRiskObject(@IdТехногенногоОбъекта int, 
										@КодТипаТехногенногоОбъекта int,
										@КодТипаНазначенияЗемель int,
										@НаименованиеТехногенногоОбъекта nvarchar(MAX),
										@АдресТехногенногоОбъекта nvarchar(MAX),
										@ШиротаГрад float,
										@ДолготаГрад float,
										@ТипГрунта int,
										@ГлубинаГрунтовыхВод float,
										@ВысотаУровнемМоря float) 
as begin 
    declare @rc int = -1;
	update  dbo.ТехногенныйОбъект set 
	КодТипаТехногенногоОбъекта = @КодТипаТехногенногоОбъекта,
	КодТипаНазначенияЗемель = @КодТипаНазначенияЗемель,
	НаименованиеТехногенногоОбъекта = @НаименованиеТехногенногоОбъекта,
	АдресТехногенногоОбъекта = @АдресТехногенногоОбъекта,
	ШиротаГрад = @ШиротаГрад,
	ДолготаГрад = @ДолготаГрад,
	ТипГрунта = @ТипГрунта,
	ГлубинаГрунтовыхВод = @ГлубинаГрунтовыхВод,
	ВысотаУровнемМоря = @ВысотаУровнемМоря 
	where IdТехногенногоОбъекта = @IdТехногенногоОбъекта;  
	set @rc = @@ROWCOUNT;
	return @rc;    
end;
go
-- Получение следующего ID техногенного объекта
create procedure EGH.GetNextRiskObjectId(@IdТехногенногоОбъекта int output)
 as begin
	declare @rc int = -1;
	set @IdТехногенногоОбъекта = (select max(IdТехногенногоОбъекта)+1 from dbo.ТехногенныйОбъект);
	set @rc = @@ROWCOUNT;
	return @rc;    
end;
go

---- Получение списка техногенных объектов, находящихся на расстроянии <D(метров) от точки (X,Y)
create procedure EGH.GetListRiskObjectOnDistanceLessThanD (@ШиротаГрад float, @ДолготаГрад float, @Расстояние float)
 as begin
	declare @rc int = -1;

	select [IdТехногенногоОбъекта],
		[ШиротаГрад],
		[ДолготаГрад],
		SQRT(Power(([ШиротаГрад]-@ШиротаГрад), 2)+Power(([ДолготаГрад]-@ДолготаГрад), 2)) as [Расстояние]
	from dbo.ТехногенныйОбъект where (SQRT(Power(([ШиротаГрад]-@ШиротаГрад), 2)+Power(([ДолготаГрад]-@ДолготаГрад), 2)) < @Расстояние);
		set @rc = @@ROWCOUNT;
	return @rc;    
end;
go
---- Получение списка техногенных объектов, находящихся на расстроянии >D1(метров) и <D1(метров) от точки (X,Y)
create procedure EGH.GetListRiskObjectOnDistanceLessThanD2MoreThanD1(@ШиротаГрад float, @ДолготаГрад float, @Расстояние1 float, @Расстояние2 float)
 as begin
	declare @rc int = -1;

	select [IdТехногенногоОбъекта],
		[ШиротаГрад],
		[ДолготаГрад],
		SQRT(Power(([ШиротаГрад]-@ШиротаГрад), 2)+Power(([ДолготаГрад]-@ДолготаГрад), 2)) as [Расстояние]
	from dbo.ТехногенныйОбъект where( (SQRT(Power(([ШиротаГрад]-@ШиротаГрад), 2)+Power(([ДолготаГрад]-@ДолготаГрад), 2)) > @Расстояние1)
		and (SQRT(Power(([ШиротаГрад]-@ШиротаГрад), 2)+Power(([ДолготаГрад]-@ДолготаГрад), 2)) < @Расстояние2));
		set @rc = @@ROWCOUNT;
	return @rc;    
end;
go










