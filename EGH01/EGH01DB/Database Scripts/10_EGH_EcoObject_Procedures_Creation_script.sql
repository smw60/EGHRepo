----------------- Создание процедур базы данных -----------------------------
----		Будут созданы следующие процедуры
---- Природоохраняемый объект    
-----------------------------------------------------------------------------
---- Добавление природоохраняемого объекта
---- Удаление природоохраняемого объекта 
---- Получение природоохраняемого объекта по ID 
---- Получение списка природоохраняемых объектов 
---- Обновление природоохраняемого объекта
---- Получение следующего ID природоохраняемого объекта
---- Получение списка природоохраняемых объектов, находящихся на расстроянии <D(метров) от точки (X,Y)
---- Получение списка природоохраняемых объектов, находящихся на расстроянии >D1(метров) и <D1(метров) от точки (X,Y)
-----------------------------------------------------------------------------
USE EGH;
go

drop procedure EGH.CreateEcoObject;
drop procedure EGH.DeleteEcoObject;
drop procedure EGH.GetEcoObjectByID;
drop procedure EGH.GetEcoObjectList;
drop procedure EGH.UpdateEcoObject;
drop procedure EGH.GetNextEcoObjectId;
drop procedure EGH.GetListEcoObjectOnDistanceLessThanD;
drop procedure EGH.GetListEcoObjectOnDistanceLessThanD2MoreThanD1;
GO
------------------------------------

-- Добавление Природоохранного объекта 
create procedure EGH.CreateEcoObject(
		    @IdПриродоохранногоОбъекта int,  
			@НаименованиеПриродоохранногоОбъекта nvarchar(MAX),
			@КодТипаПриродоохранногоОбъекта int,
			@КодТипаНазначенияЗемель int,
			@ШиротаГрад float,
			@ДолготаГрад float,
			@ТипГрунта int,
			@ГлубинаГрунтовыхВод float,
			@ВысотаУровнемМоря float)
as begin 
declare @rc int  = @IdПриродоохранногоОбъекта;
	begin try
		insert into dbo.ПриродоохранныйОбъект(
					IdПриродоохранногоОбъекта,
					НаименованиеПриродоохранногоОбъекта,
					КодТипаПриродоохранногоОбъекта,
					КодТипаНазначенияЗемель,
					ШиротаГрад,
					ДолготаГрад,
					ТипГрунта,
					ГлубинаГрунтовыхВод,
					ВысотаУровнемМоря)
			values (@IdПриродоохранногоОбъекта,
					@НаименованиеПриродоохранногоОбъекта,  
					@КодТипаПриродоохранногоОбъекта,
					@КодТипаНазначенияЗемель,
					@ШиротаГрад,
					@ДолготаГрад,
					@ТипГрунта,
					@ГлубинаГрунтовыхВод,
					@ВысотаУровнемМоря); 
	end try
	begin catch
	    set @rc = -1;
	end catch 
  return @rc;  
end;
go

-- Удаление Природоохранного объекта
create procedure EGH.DeleteEcoObject(@IdПриродоохранногоОбъекта int)
as begin 
    declare @rc int  = @IdПриродоохранногоОбъекта;
    begin try 
	 delete dbo.ПриродоохранныйОбъект where IdПриродоохранногоОбъекта = @IdПриродоохранногоОбъекта;
	end try
	begin catch
	    set @rc = -1;
	end catch   
	return @rc;
end;
go
-- Получение Природоохранного объекта  по ID 
create  procedure EGH.GetEcoObjectByID(@IdПриродоохранногоОбъекта int)
as begin 
    declare @rc int = -1;
select  IdПриродоохранногоОбъекта,
		O.КодТипаПриродоохранногоОбъекта КодТипаПриродоохранногоОбъекта,
		НаименованиеТипаПриродоохранногоОбъекта,
		КатегорияВодоохрТер,
		НаименованиеКатегории,
		КодТипаНазначенияЗемель,
		НаименованиеНазначенияЗемель,
		ПДК,
		ПДКводы,
		НормДокументЗемля,
		НормДокументВода,
		НаименованиеПриродоохранногоОбъекта,
		ШиротаГрад,
		ДолготаГрад,
		ТипГрунта,
		НаименованиеТипаГрунта,
		КоэфПористости,
		КоэфЗадержкиМиграции,
		КоэфФильтрацииВоды,
		КоэфДиффузии,
		КоэфРаспределения,
		КоэфСорбции,
		КоэфКапВлагоемкости,
		ВлажностьГрунта,
		КоэфАверьянова,
		Водопроницаемость,
		СредняяПлотностьГрунта,
		ГлубинаГрунтовыхВод,
		ВысотаУровнемМоря
 from dbo.ПриродоохранныйОбъект O 
			inner join dbo.ТипПриродоохранногоОбъекта T on O.КодТипаПриродоохранногоОбъекта = T.КодТипаПриродоохранногоОбъекта
			inner join dbo.КатегорияВодоохраннойТерритории CWP on T.КатегорияВодоохрТер = CWP.КодТипаКатегории
			inner join dbo.ТипГрунта G on O.ТипГрунта = G.КодТипаГрунта
			inner join dbo.НазначениеЗемель Z on O.КодТипаНазначенияЗемель = Z.КодНазначенияЗемель
		 where IdПриродоохранногоОбъекта = @IdПриродоохранногоОбъекта;  
	set @rc = @@ROWCOUNT;
	return @rc;    
end;
go
-- Получение списка техногенных объектов
create procedure EGH.GetEcoObjectList
 as begin
	declare @rc int = -1;
	select 
		IdПриродоохранногоОбъекта,
		O.КодТипаПриродоохранногоОбъекта КодТипаПриродоохранногоОбъекта,
		НаименованиеТипаПриродоохранногоОбъекта,
		КатегорияВодоохрТер,
		НаименованиеКатегории,
		КодТипаНазначенияЗемель,
		НаименованиеНазначенияЗемель,
		ПДК,
		ПДКводы,
		НормДокументЗемля,
		НормДокументВода,
		НаименованиеПриродоохранногоОбъекта,
		ШиротаГрад,
		ДолготаГрад,
		ТипГрунта,
		НаименованиеТипаГрунта,
		КоэфПористости,
		КоэфЗадержкиМиграции,
		КоэфФильтрацииВоды,
		КоэфДиффузии,
		КоэфРаспределения,
		КоэфСорбции,
		КоэфКапВлагоемкости,
		ВлажностьГрунта,
		КоэфАверьянова,
		Водопроницаемость,
		СредняяПлотностьГрунта,
		ГлубинаГрунтовыхВод,
		ВысотаУровнемМоря
 from dbo.ПриродоохранныйОбъект O 
			inner join dbo.ТипПриродоохранногоОбъекта T on O.КодТипаПриродоохранногоОбъекта = T.КодТипаПриродоохранногоОбъекта
			inner join dbo.КатегорияВодоохраннойТерритории CWP on T.КатегорияВодоохрТер = CWP.КодТипаКатегории
			inner join dbo.ТипГрунта G on O.ТипГрунта = G.КодТипаГрунта
			inner join dbo.НазначениеЗемель Z on O.КодТипаНазначенияЗемель = Z.КодНазначенияЗемель;
	set @rc = @@ROWCOUNT;
	return @rc;    
end;
go
-- Обновление Природоохранного объекта
create  procedure EGH.UpdateEcoObject(
					@IdПриродоохранногоОбъекта int, 
					@КодТипаПриродоохранногоОбъекта int,
					@КодТипаНазначенияЗемель int,
					@НаименованиеПриродоохранногоОбъекта nvarchar(MAX),
					@ШиротаГрад float,
					@ДолготаГрад float,
					@ТипГрунта int,
					@ГлубинаГрунтовыхВод float,
					@ВысотаУровнемМоря float) 
as begin 
    declare @rc int = -1;
	update  dbo.ПриродоохранныйОбъект 
	set 
	КодТипаПриродоохранногоОбъекта = @КодТипаПриродоохранногоОбъекта,
	КодТипаНазначенияЗемель = @КодТипаНазначенияЗемель,
	НаименованиеПриродоохранногоОбъекта = @НаименованиеПриродоохранногоОбъекта,
	ШиротаГрад = @ШиротаГрад,
	ДолготаГрад = @ДолготаГрад,
	ТипГрунта = @ТипГрунта,
	ГлубинаГрунтовыхВод = @ГлубинаГрунтовыхВод,
	ВысотаУровнемМоря = @ВысотаУровнемМоря 
	where IdПриродоохранногоОбъекта = @IdПриродоохранногоОбъекта;  
	set @rc = @@ROWCOUNT;
	return @rc;    
end;
go
-- Получение следующего ID Природоохранного объекта
create procedure EGH.GetNextEcoObjectId(@IdПриродоохранногоОбъекта int output)
 as begin
	declare @rc int = -1;
	set @IdПриродоохранногоОбъекта = (select max(IdПриродоохранногоОбъекта)+1 from dbo.ПриродоохранныйОбъект);
	set @rc = @@ROWCOUNT;
	if @IdПриродоохранногоОбъекта is null 
	begin
		set @IdПриродоохранногоОбъекта = 1;
		set @rc = 1;
	end;
	return @rc;    
end;
go

---- Получение списка природоохранных объектов, находящихся на расстроянии <D(метров) от точки (X,Y)
create procedure EGH.GetListEcoObjectOnDistanceLessThanD (
				@ШиротаГрад float, 
				@ДолготаГрад float, 
				@Расстояние float)
 as begin
	declare @rc int = -1;

	select IdПриродоохранногоОбъекта,
		ШиротаГрад,
		ДолготаГрад,
		SQRT(Power((ШиротаГрад-@ШиротаГрад), 2)+Power((ДолготаГрад-@ДолготаГрад), 2)) as Расстояние
	from dbo.ПриродоохранныйОбъект where (SQRT(Power((ШиротаГрад-@ШиротаГрад), 2)+Power((ДолготаГрад-@ДолготаГрад), 2)) < @Расстояние);
		set @rc = @@ROWCOUNT;
	return @rc;    
end;
go
---- Получение списка природоохранных объектов, находящихся на расстроянии >D1(метров) и <D1(метров) от точки (X,Y)
create procedure EGH.GetListEcoObjectOnDistanceLessThanD2MoreThanD1(
					@ШиротаГрад float, 
					@ДолготаГрад float, 
					@Расстояние1 float, 
					@Расстояние2 float)
 as begin
	declare @rc int = -1;

	select IdПриродоохранногоОбъекта,
		ШиротаГрад,
		ДолготаГрад,
		SQRT(Power((ШиротаГрад-@ШиротаГрад), 2)+Power((ДолготаГрад-@ДолготаГрад), 2)) as Расстояние
	from dbo.ПриродоохранныйОбъект where( (SQRT(Power((ШиротаГрад-@ШиротаГрад), 2)+Power((ДолготаГрад-@ДолготаГрад), 2)) > @Расстояние1)
		and (SQRT(Power((ШиротаГрад-@ШиротаГрад), 2)+Power((ДолготаГрад-@ДолготаГрад), 2)) < @Расстояние2));
		set @rc = @@ROWCOUNT;
	return @rc;    
end;
go











