----------------- —оздание процедур --------- -------------------------------
---- √еологическа€ точка
-----------------------------------------------------------------------------
---- ƒобавление геологической точки
---- ”даление геологической точки
---- ѕолучение геологической точки  
---- ѕолучение геологической точки
---- ќбновление геологической точки
---- ѕолучение следующего ID геологической точки
-----------------------------------------------------------------------------
drop procedure EGH.CreateAnchorPoint;
drop procedure EGH.DeleteAnchorPoint;
drop procedure EGH.GetAnchorPointByID;
drop procedure EGH.GetAnchorPointList;
drop procedure EGH.UpdateAnchorPoint;
drop procedure EGH.GetNextAnchorPointId;
drop procedure EGH.GetListAnchorPointOnDistanceLessThanD;
drop procedure EGH.GetListAnchorPointOnDistanceLessThanD2MoreThanD1;
GO
------------------------------------

-- ƒобавление геологической точки 
create procedure EGH.CreateAnchorPoint(
		    @Idќпорной√еологической“очки int,  
			@Ўирота√рад float, 
			@ƒолгота√рад float,
			@“ип√рунта int,
			@√лубина√рунтовых¬од float,
			@¬ысота”ровнемћор€ float,
			@ одЌазначени€«емель int)
as begin 
declare @rc int  = @Idќпорной√еологической“очки;
	begin try
		insert into dbo.ќпорна€√еологическа€“очка(
					Idќпорной√еологической“очки,
					Ўирота√рад,
					ƒолгота√рад,
					“ип√рунта,
					√лубина√рунтовых¬од,
					¬ысота”ровнемћор€,
					 одЌазначени€«емель) 
			values (@Idќпорной√еологической“очки,  
					@Ўирота√рад, 
					@ƒолгота√рад,
					@“ип√рунта,
					@√лубина√рунтовых¬од,
					@¬ысота”ровнемћор€,
					@ одЌазначени€«емель); 
	end try
	begin catch
	    set @rc = -1;
	end catch 
  return @rc;  
end;
go

-- ”даление геологической точки
create procedure EGH.DeleteAnchorPoint (@Idќпорной√еологической“очки int)
as begin 
    declare @rc int  = @Idќпорной√еологической“очки;
    begin try 
	 delete dbo.ќпорна€√еологическа€“очка 
	 where Idќпорной√еологической“очки = @Idќпорной√еологической“очки;
	end try
	begin catch
	    set @rc = -1;
	end catch   
	return @rc;
end;
go

-- ѕолучение геологической точки  по ID 
create  procedure EGH.GetAnchorPointByID(@Idќпорной√еологической“очки int) 
as begin 
    declare @rc int = -1;
	select	
			Ўирота√рад,  
			ƒолгота√рад,
			“ип√рунта,
			Ќаименование“ипа√рунта,
			 оэфѕористости,
			 оэф«адержкићиграции,
			 оэф‘ильтрации¬оды,
			 оэфƒиффузии,
			 оэф–аспределени€,
			 оэф—орбции,
			 оэф ап¬лагоемкости,
			¬лажность√рунта,
			 оэфјверь€нова,
			¬одопроницаемость,
			—редн€€ѕлотность√рунта,
			√лубина√рунтовых¬од,
			¬ысота”ровнемћор€,
			AP. одЌазначени€«емель  одЌазначени€«емель,
			ЌаименованиеЌазначени€«емель,
			ѕƒ ,
			ѕƒ воды,
			Ќормƒокумент«емл€,
			Ќормƒокумент¬ода
	from dbo.ќпорна€√еологическа€“очка AP 
	inner join dbo.“ип√рунта GT on AP.“ип√рунта = GT. од“ипа√рунта
	inner join dbo.Ќазначение«емель CT on AP. одЌазначени€«емель = CT. одЌазначени€«емель
	where Idќпорной√еологической“очки = @Idќпорной√еологической“очки;  
	set @rc = @@ROWCOUNT;
	return @rc;    
end;
go

-- ѕолучение списка геологических точек 
create procedure EGH.GetAnchorPointList
 as begin
	declare @rc int = -1;
	select	Idќпорной√еологической“очки, 
			Ўирота√рад,  
			ƒолгота√рад,
			“ип√рунта,
			Ќаименование“ипа√рунта,
			 оэфѕористости,
			 оэф«адержкићиграции,
			 оэф‘ильтрации¬оды,
			 оэфƒиффузии,
			 оэф–аспределени€,
			 оэф—орбции,
			 оэф ап¬лагоемкости,
			¬лажность√рунта,
			 оэфјверь€нова,
			¬одопроницаемость,
			—редн€€ѕлотность√рунта,
			√лубина√рунтовых¬од,
			¬ысота”ровнемћор€,
			AP. одЌазначени€«емель  одЌазначени€«емель,
			ЌаименованиеЌазначени€«емель,
			ѕƒ ,
			ѕƒ воды,
			Ќормƒокумент«емл€,
			Ќормƒокумент¬ода
	from dbo.ќпорна€√еологическа€“очка AP 
	inner join dbo.“ип√рунта GT on AP.“ип√рунта = GT. од“ипа√рунта
	inner join dbo.Ќазначение«емель CT on AP. одЌазначени€«емель = CT. одЌазначени€«емель;
	set @rc = @@ROWCOUNT;
	return @rc;    
end;
go
-- ќбновление геологической точки
create  procedure EGH.UpdateAnchorPoint(	@Idќпорной√еологической“очки int, 
									@Ўирота√рад float,  
									@ƒолгота√рад float,
									@“ип√рунта int,
									@√лубина√рунтовых¬од float,
									@¬ысота”ровнемћор€ float,
									@ одЌазначени€«емель int) 
as begin 
    declare @rc int = -1;
	update  dbo.ќпорна€√еологическа€“очка set 
	Ўирота√рад = @Ўирота√рад,
	ƒолгота√рад = @ƒолгота√рад,
	“ип√рунта = @“ип√рунта,
	√лубина√рунтовых¬од = @√лубина√рунтовых¬од,
	¬ысота”ровнемћор€ = @¬ысота”ровнемћор€,
	 одЌазначени€«емель = @ одЌазначени€«емель
	where Idќпорной√еологической“очки = @Idќпорной√еологической“очки;  
	set @rc = @@ROWCOUNT;
	return @rc;    
end;
go

-- ѕолучение следующего ID геологической точки
create procedure  EGH.GetNextAnchorPointId(@Idќпорной√еологической“очки int output)
 as begin
	declare @rc int = -1;
	select @Idќпорной√еологической“очки = max(Idќпорной√еологической“очки)+1 from dbo.ќпорна€√еологическа€“очка;
	set @rc = @@ROWCOUNT;
	if @Idќпорной√еологической“очки is null 
		begin
			set @Idќпорной√еологической“очки = 1;
			set @rc = 1;
		end;
	return @rc;    
end;
go


---- ѕолучение списка геологических точек, наход€щихс€ на расстро€нии <D(метров) от точки (X,Y)
create procedure EGH.GetListAnchorPointOnDistanceLessThanD (@Ўирота√рад real, @ƒолгота√рад real, @–ассто€ние real)
 as begin
	declare @rc int = -1;

	select 
		Idќпорной√еологической“очки,
		Ўирота√рад,
		ƒолгота√рад,
		“ип√рунта,
		Ќаименование“ипа√рунта,
		 оэфѕористости,
		 оэф‘ильтрации¬оды,
		 оэфƒиффузии,
		 оэф–аспределени€,
		 оэф—орбции,
		 оэф ап¬лагоемкости,
		¬лажность√рунта,
		 оэфјверь€нова,
		¬одопроницаемость,
		—редн€€ѕлотность√рунта,
		AP. одЌазначени€«емель  одЌазначени€«емель,
		ЌаименованиеЌазначени€«емель,
		ѕƒ ,
		ѕƒ воды,
		Ќормƒокумент«емл€,
		Ќормƒокумент¬ода,
		CT. од атегории«агр€знени€√рунта  од атегории«агр€знени€√рунта,
		Ќаименование атегории«агр€знени€√рунта,
		ћинƒиапазон,
		ћаксƒиапазон
		√лубина√рунтовых¬од,
		¬ысота”ровнемћор€,
		EGH.Distance(@Ўирота√рад, @ƒолгота√рад, Ўирота√рад, ƒолгота√рад) as –ассто€ние
		from dbo.ќпорна€√еологическа€“очка AP 
		inner join dbo.“ип√рунта GT on AP.“ип√рунта = GT. од“ипа√рунта
		inner join dbo.Ќазначение«емель CT 
		on AP. одЌазначени€«емель = CT. одЌазначени€«емель
		inner join dbo. атегори€«агр€знени€√рунта GPC 
		on CT. од атегории«агр€знени€√рунта = GPC. од атегории«агр€знени€√рунта
		where EGH.Distance(@Ўирота√рад, @ƒолгота√рад, Ўирота√рад, ƒолгота√рад) < @–ассто€ние;
		set @rc = @@ROWCOUNT;
	return @rc;    
end;
go
---- ѕолучение списка геологических точек, наход€щихс€ на расстро€нии >D1(метров) и <D1(метров) от точки (X,Y)
create procedure EGH.GetListAnchorPointOnDistanceLessThanD2MoreThanD1(@Ўирота√рад real, @ƒолгота√рад real, @–ассто€ние1 real, @–ассто€ние2 real)
 as begin
	declare @rc int = -1;

	select 
		Idќпорной√еологической“очки,
		Ўирота√рад,
		ƒолгота√рад,
		“ип√рунта,
		Ќаименование“ипа√рунта,
		 оэфѕористости,
		 оэф‘ильтрации¬оды,
		 оэфƒиффузии,
		 оэф–аспределени€,
		 оэф—орбции,
		 оэф ап¬лагоемкости,
		¬лажность√рунта,
		 оэфјверь€нова,
		¬одопроницаемость,
		—редн€€ѕлотность√рунта,
		AP. одЌазначени€«емель  одЌазначени€«емель,
		ЌаименованиеЌазначени€«емель,
		ѕƒ ,
		ѕƒ воды,
		Ќормƒокумент«емл€,
		Ќормƒокумент¬ода,
		CT. од атегории«агр€знени€√рунта  од атегории«агр€знени€√рунта,
		Ќаименование атегории«агр€знени€√рунта,
		ћинƒиапазон,
		ћаксƒиапазон
		√лубина√рунтовых¬од,
		¬ысота”ровнемћор€,
		EGH.Distance(@Ўирота√рад, @ƒолгота√рад, Ўирота√рад, ƒолгота√рад) as –ассто€ние
		from dbo.ќпорна€√еологическа€“очка AP
		inner join dbo.“ип√рунта GT on AP.“ип√рунта = GT. од“ипа√рунта 
		inner join dbo.Ќазначение«емель CT 
		on AP. одЌазначени€«емель = CT. одЌазначени€«емель
		inner join dbo. атегори€«агр€знени€√рунта GPC 
		on CT. од атегории«агр€знени€√рунта = GPC. од атегории«агр€знени€√рунта
	where EGH.Distance(@Ўирота√рад, @ƒолгота√рад, Ўирота√рад, ƒолгота√рад) > @–ассто€ние1
		and EGH.Distance(@Ўирота√рад, @ƒолгота√рад, Ўирота√рад, ƒолгота√рад) < @–ассто€ние2;
		set @rc = @@ROWCOUNT;
	return @rc;    
end;
go
